{"version":3,"sources":["../node_modules/ytpl/lib sync","component/AudioPlayerControl.jsx","component/TrackInfo.jsx","component/VolumeSlider.jsx","component/AudioPlayer.jsx","component/SearchOverlay.jsx","component/PlayerLayout.jsx","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","AudioPlayerControl","isPlaying","setIsplaying","nextTrack","prevTrack","className","icon","faBackward","onClick","faPause","faPlay","faForward","TrackInfo","title","author","track","target","VolumeSlider","audioRef","useState","showVolumeSlider","setShowVolumeSlider","faVolumeUp","type","max","min","defaultValue","step","onInput","event","current","volume","value","streamUrl","AudioPlayer","tracks","trackIndex","setTrackIndex","audioSrc","useRef","Audio","addEventListener","console","log","useEffect","play","pause","length","src","SearchOverlay","isTrackReady","setIsTracksReady","setTracks","input","setInput","getPlaylistData","a","getPlaylistID","playlistID","axios","get","res","data","placeholder","validateID","PlayerLayout","isTracksReady","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e20fe73.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 124;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faPause, faForward, faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// Play / Pause, Next, Prev Button\r\nconst AudioPlayerControl = ({ isPlaying, setIsplaying, nextTrack, prevTrack }) => {\r\n    return (\r\n        <div className=\"flex flex-row bg-gray-900 rounded-md mx-2\">\r\n            <FontAwesomeIcon icon={faBackward}\r\n                className=\"text-gray-300 hover:text-white transition duration-300 text-4xl m-4 cursor-pointer\"\r\n                onClick={prevTrack} />\r\n            {isPlaying ?\r\n                <FontAwesomeIcon icon={faPause}\r\n                    className=\"text-gray-300 hover:text-white transition duration-300 text-4xl m-4 cursor-pointer\"\r\n                    onClick={() => setIsplaying(!isPlaying)} />\r\n                : <FontAwesomeIcon icon={faPlay}\r\n                    className=\"text-gray-300 hover:text-white transition duration-300 text-4xl m-4 cursor-pointer\"\r\n                    onClick={() => setIsplaying(!isPlaying)} />\r\n            }\r\n            <FontAwesomeIcon icon={faForward}\r\n                className=\"text-gray-300 hover:text-white transition duration-300 text-4xl m-4 cursor-pointer\"\r\n                onClick={nextTrack} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AudioPlayerControl;","import React from 'react'\r\n\r\nconst TrackInfo = ({ title, author, track }) => {\r\n    return (\r\n        <div className=\" flex flex-col justify-center items-start bg-gray-900 rounded-md mx-2 pr-2 w-1/3 overflow-hidden\">\r\n            {track !== [] ?\r\n                <div>\r\n                    <div className=\"flex mx-4\">\r\n                        <p className=\"text-white text-sm sm:text-xl font-semibold whitespace-nowrap\" target=\"_blank\">{title}</p>\r\n                    </div>\r\n                    <div className=\"flex mx-4\">\r\n                        <p className=\"text-white text-left text-sm sm:text-lg whitespace-nowrap\">{author}</p>\r\n                    </div>\r\n                </div>\r\n                : <div className=\"flex mx-4\">\r\n                    <p className=\"text-white text-sm sm:text-xl font-semibold\">Playlist is Empty</p>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrackInfo\r\n","import { useState } from \"react\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst VolumeSlider = ({ audioRef }) => {\r\n    const [showVolumeSlider, setShowVolumeSlider] = useState(false)\r\n\r\n    return (\r\n        <div className=\" flex flex-col relative my-auto bg-gray-900 rounded-md mx-2\">\r\n            <FontAwesomeIcon icon={faVolumeUp}\r\n                className=\"text-gray-300 hover:text-white transition duration-300 text-4xl m-4 cursor-pointer\"\r\n                onClick={() => setShowVolumeSlider(!showVolumeSlider)} />\r\n            <div className={`absolute -bottom-16 -left-16 right-0  ${showVolumeSlider ? \"show\" : \"hidden\"}`}>\r\n                <input type=\"range\" max=\"100\" min=\"0\" defaultValue={100}\r\n                    step=\"1\"\r\n                    onInput={(event) => {\r\n                        audioRef.current.volume = event.target.value / 100\r\n                    }} className=\"range\"></input>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VolumeSlider\r\n","import { useState, useRef, useEffect } from \"react\"\r\nimport AudioPlayerControl from \"./AudioPlayerControl\";\r\nimport TrackInfo from \"./TrackInfo\";\r\nimport VolumeSlider from \"./VolumeSlider\";\r\n\r\nconst streamUrl = 'https://web-player-backend.herokuapp.com/stream/'\r\n\r\nfunction AudioPlayer({tracks}) {\r\n    const [isPlaying, setIsplaying] = useState(true)\r\n    const [trackIndex, setTrackIndex] = useState(0)\r\n    const { title, author, audioSrc } = tracks[trackIndex]\r\n\r\n    // Init Audio Player\r\n    const audioRef = useRef(new Audio(`${streamUrl}${audioSrc}/`))\r\n    audioRef.current.addEventListener(\"ended\", (event) => {\r\n        console.log(\"Playback Ended\")\r\n        nextTrack()\r\n    })\r\n\r\n    // Is Playback Paused or Running\r\n    useEffect(() => {\r\n        if (isPlaying) {\r\n            audioRef.current.play()\r\n        } else {\r\n            audioRef.current.pause()\r\n        }\r\n    }, [isPlaying])\r\n\r\n    // Playback Index\r\n    const nextTrack = () => {\r\n        if (trackIndex < tracks.length - 1) {\r\n            setTrackIndex(trackIndex + 1)\r\n        }\r\n        else {\r\n            setTrackIndex(0)\r\n        }\r\n    }\r\n    const prevTrack = () => {\r\n        if (trackIndex - 1 > 0) {\r\n            setTrackIndex(trackIndex - 1)\r\n        }\r\n        else {\r\n            setTrackIndex(tracks.length - 1)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        console.log(`Playing ${title}`)\r\n        // audioRef.current = new Audio(`${streamUrl}${audioSrc}`)\r\n        audioRef.current.src = `${streamUrl}${audioSrc}`\r\n        audioRef.current.play()\r\n    }, [trackIndex, audioSrc, title])\r\n\r\n    return (\r\n        <div className=\"flex flex-row justify-center my-4\">\r\n            <AudioPlayerControl\r\n                isPlaying={isPlaying}\r\n                setIsplaying={setIsplaying}\r\n                nextTrack={nextTrack}\r\n                prevTrack={prevTrack}\r\n            />\r\n            <TrackInfo\r\n                title={title}\r\n                author={author}\r\n                track={tracks[trackIndex]}\r\n            />\r\n            <VolumeSlider\r\n                audioRef={audioRef}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AudioPlayer;","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { getPlaylistID, validateID } from 'ytpl'\r\n\r\nfunction SearchOverlay({ isTrackReady, setIsTracksReady, tracks, setTracks }) {\r\n    const [input, setInput] = useState(null)\r\n    const playlistUrl = 'https://web-player-backend.herokuapp.com/playlist/'\r\n\r\n    const getPlaylistData = async () => {\r\n        const playlistID = await getPlaylistID(input)\r\n        const res = await axios.get(`${playlistUrl}${playlistID}`)\r\n        console.log(res.data)\r\n        setTracks(res.data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (tracks !== null) {\r\n            setIsTracksReady(true)\r\n        }\r\n\r\n    }, [setIsTracksReady, tracks])\r\n\r\n    return (\r\n        <div className=\"flex flex-row justify-center\">\r\n            <div className=\"form-control\" >\r\n                <label className=\"label\">\r\n                    <span className=\"label-text text-white text-xl\">Put Youtube Playlist Link</span>\r\n                </label>\r\n                <div className=\"relative\">\r\n                    <input type=\"text\" placeholder=\"Playlist Link\"\r\n                        className=\"w-full mr-64 input border-gray-900 input-bordered\"\r\n                        onInput={e => setInput(e.target.value)} />\r\n                    <button className=\"absolute top-0 right-0 btn bg-gray-900 rounded-l-none text-white text-xl\"\r\n                        onClick={() => {\r\n                            if (validateID(input)) getPlaylistData()\r\n                            else console.log(\"Please Enter the Correct Playlist Link\")\r\n                        }}>Go</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchOverlay\r\n","import AudioPlayer from \"./AudioPlayer\";\r\nimport SearchOverlay from \"./SearchOverlay\";\r\nimport { useState } from 'react'\r\n// import Tracks from \"../assets/tracks.json\"\r\n\r\nfunction PlayerLayout() {\r\n    const [tracks, setTracks] = useState(null)\r\n    const [isTracksReady, setIsTracksReady] = useState(false)\r\n\r\n    return (\r\n        <div className=\" flex flex-col min-h-screen bg-gray-800 justify-center\">\r\n            <div className=\"justify-center m-4\">\r\n                <h1 className=\"text-white text-7xl font-bold\">React Web Player</h1>\r\n            </div>\r\n            {isTracksReady ?\r\n                <AudioPlayer\r\n                    tracks={tracks} />\r\n                : <SearchOverlay\r\n                    isTracksReady={isTracksReady}\r\n                    setIsTracksReady={setIsTracksReady}\r\n                    tracks={tracks}\r\n                    setTracks={setTracks} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerLayout;","import './App.css';\nimport PlayerLayout from './component/PlayerLayout'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <PlayerLayout />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}